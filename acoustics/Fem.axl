<?xml version="1.0" ?>
<module name="Fem" version="1.0">
  <description>FEM module description</description>


  <!-- Define entry points for the module -->
  <entry-points>
    <entry-point method-name="compute" name="Compute" where="compute-loop" property="none" />
    <entry-point method-name="startInit" name="StartInit" where="start-init" property="none" />
  </entry-points>


  <!-- Declare variables used in the module -->
  <variables>
    <variable field-name="u" name="U" data-type="real" item-kind="node" dim="0">
      <description>FEM variable u on nodes</description>
    </variable>
    <variable field-name="node_coord" name="NodeCoord" data-type="real3" item-kind="node" dim="0">
      <description>Node coordinates from Arcane variable</description>
    </variable>
  </variables>


  <!-- Define module options -->
  <options>
    <!-- File for result validation -->
    <simple name="result-file" type="string" optional="true">
      <description>File name of a file containing the values of the solution vector to check the results</description>
    </simple>

    <!-- Material property k/c squared -->
    <simple name="kc2" type="real" default="0.4">
      <description>k/c square of the material.</description>
    </simple>

    <!-- Mesh type used by the solver -->
    <simple name="mesh-type" type="string"  default="TRIA3" optional="true">
      <description>Type of mesh provided to the solver</description>
    </simple>

    <!-- Linear system service instance -->
    <service-instance name="linear-system" type="Arcane::FemUtils::IDoFLinearSystemFactory" default="AlephLinearSystem" />

    <!-- Boundary conditions service instance -->
    <service-instance name = "boundary-conditions" type = "BC::IArcaneFemBC" optional = "true" default="FemBoundaryConditions" />
  </options>
</module>
