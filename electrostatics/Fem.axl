<?xml version="1.0" ?>
<module name="Fem" version="1.0">
  <description>FEM module description</description>
  <entry-points>
    <entry-point method-name="compute" name="Compute" where="compute-loop" property="none" />
    <entry-point method-name="startInit" name="StartInit" where="start-init" property="none" />
  </entry-points>
  <variables>
    <variable field-name="phi" name="Phi" data-type="real" item-kind="node" dim="0">
      <description>FEM variable phi on nodes for electrostatic potential</description>
    </variable>
    <variable field-name="E" name="E" data-type="real3" item-kind="cell" dim="0">
      <description>electric field vector on cells</description>
    </variable>
    <variable field-name="node_coord" name="NodeCoord" data-type="real3" item-kind="node" dim="0">
      <description>Node Coordinates from Arcane variable</description>
    </variable>
  </variables>
  <options>
    <simple name="rho" type="real" default="0.0">
      <description>charge density of the material.</description>
    </simple>
    <simple name="epsilon" type="real" default="0.0">
      <description>freespace permittivity.</description>
    </simple>
    <simple name="result-file" type="string" optional="true">
      <description>File name of a file containing the values of the solution vector to check the results</description>
    </simple>
    <simple name="mesh-type" type="string"  default="TRIA3" optional="true">
      <description>Type of mesh provided to the solver</description>
    </simple>


    <!-- Linear system service instance -->
    <service-instance name="linear-system" type="Arcane::FemUtils::IDoFLinearSystemFactory" default="AlephLinearSystem" />

    <!-- Boundary conditions service instance -->
    <service-instance name = "boundary-conditions" type = "BC::IArcaneFemBC" optional = "true" default="FemBoundaryConditions" />
  </options>
</module>
