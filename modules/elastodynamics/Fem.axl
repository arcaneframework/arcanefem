<?xml version="1.0" ?>
<module name="Fem" version="1.0">
  <description>FEM module descriptor</description>
  <entry-points>
    <entry-point method-name="compute" name="Compute" where="compute-loop" property="none" />
    <entry-point method-name="startInit" name="StartInit" where="start-init" property="none" />
  </entry-points>
  <variables>
    <variable field-name="dU" name="dU" data-type="real3" item-kind="node" dim="0">
      <description>Change in displacement U variable</description>
    </variable>
     <variable field-name="U" name="U" data-type="real3" item-kind="node" dim="0">
      <description>Displacement U vector for time step t-1</description>
    </variable>
    <variable field-name="V" name="V" data-type="real3" item-kind="node" dim="0">
      <description>Velocity V vector for time step t-1</description>
    </variable>
    <variable field-name="A" name="A" data-type="real3" item-kind="node" dim="0">
      <description>Acceleration V vector for time step t-1</description>
    </variable>
    <variable field-name="node_coord" name="NodeCoord" data-type="real3" item-kind="node" dim="0">
      <description>Node coordinates from Arcane variable</description>
    </variable>
  </variables>
  <options>
    <simple name = "f" type = "string[]" default="NULL NULL NULL" optional="true">
      <description>Body force vector (space separated list).</description>
    </simple>
    <simple name="E" type="real" default="0.0">
      <description>Youngs Modulus of the material.</description>
    </simple>
    <simple name="nu" type="real" default="0.0">
      <description>Poissons ratio of the material.</description>
    </simple>
    <simple name="lambda" type="real" default="0.0" optional="true">
      <description>Lame parameter of the material.</description>
    </simple>
    <simple name="mu" type="real" default="0.0" optional="true">
      <description>Lame parameter of the material.</description>
    </simple>
    <simple name="rho" type="real" default="0.0">
      <description>Density of the material.</description>
    </simple>
    <simple name="tmax" type="real" default="0.0">
      <description>Maximum time.</description>
    </simple>
    <simple name="dt" type="real" default="0.0">
      <description>Time step.</description>
    </simple>
    <simple name="etam" type="real" default="0.0">
      <description>Eta m for Generalized Alpha time scheme.</description>
    </simple>
    <simple name="etak" type="real" default="0.0">
      <description>Eta k for Generalized Alpha time scheme.</description>
    </simple>
    <simple name="alpm" type="real" default="0.0">
      <description>Alpha m for Generalized Alpha time scheme.</description>
    </simple>
    <simple name="alpf" type="real" default="0.0">
      <description>Alpha f for Generalized Alpha time scheme.</description>
    </simple>
    <simple name="result-file" type="string" optional="true">
      <description>File name of a file containing the values of the solution vector to check the results</description>
    </simple>
    <simple name="time-discretization" type="string"  default="Newmark-beta" optional="true">
      <description>Type of time discretization for the solver</description>
    </simple>
    <simple name="matrix-format" type="string" default="DOK" optional="true">
      <description>Which matrix format to use DOK|BSR|AF-BSR.</description>
    </simple>
    <simple name="petsc-flags" type="string" default="" optional="true">
      <description>Flags for PETSc from commandline.</description>
    </simple>
    <simple name="solve-linear-system" type="bool" default="true" optional="true">
      <description>Boolean to enable linear system solving.</description>
    </simple>
    <simple name="assemble-linear-system" type="bool" default="true" optional="true">
      <description>Boolean to enable linear system assembly.</description>
    </simple>
    <simple name="cross-validation" type="bool" default="true" optional="true">
      <description>Boolean to enable cross validation.</description>
    </simple>

    <simple name="hex-quad-mesh" type="bool" default="false" optional="true">
      <description>Boolean to use hexagonal quadrature for element matrix assembly.</description>
    </simple>

    <!-- - - - - - neumann-boundary-condition - - - - -->
    <complex name  = "traction-boundary-condition"
             type  = "TractionBoundaryCondition"
             minOccurs = "0"
             maxOccurs = "unbounded"
      >
      <description>
        Traction boundary condition
      </description>
      <extended name = "surface" type = "Arcane::FaceGroup">
        <description>
          FaceGroup on which to apply these boundary condition
        </description>
      </extended>
      <simple name = "traction-input-file" type = "string"  optional="true">
        <description>
          File containing traction inputs (three columns: (T,t_x,t_y))
        </description>
      </simple>
      <simple name = "t" type = "string[]" default="NULL NULL NULL" optional="true">
        <description>
          Traction vector (space separated list).
        </description>
      </simple>
    </complex>

    <!-- Linear system service instance -->
    <service-instance name="linear-system" type="Arcane::FemUtils::IDoFLinearSystemFactory" default="AlephLinearSystem" />

    <!-- Boundary conditions service instance -->
    <service-instance name = "boundary-conditions" type = "BC::IArcaneFemBC" optional = "true" default="FemBoundaryConditions" />
  </options>
</module>
